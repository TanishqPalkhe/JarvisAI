def gen(n):
    for i in range (n):
        yield i
g=gen(4)
print(g.__next__())
print(g.__next__())

g=gen(547688674)
print(g)

def topten():

    for n in range (10):
        total=n*n
        yield total

values=topten()
for i in values:
    print(i)

for i in range (10):
    sq=i*i
    print(sq)

#list comprehension

list=[i for i in range (100) if i%4==0 ]
print(list)
dic2={i:f"my items{i}" for i  in range (5)}
dic1={value:key for key,value in dic2.items()}
print(dic2,dic1)
dresses={dress for dress in ["dress2","dress2"]}
print(dresses)
total=(i for i in range (100) if i%4==0)
for i in total:
    print(i)

l=["gajar","alo","lauki"]
for items in l:
    if items=="al":
        break
else:
    print("this loop ended")
#function cache
import time
from functools import lru_cache

@lru_cache(maxsize=3)
def some_work(n):
    time.sleep(n)
    return n

if __name__=='__main__':
    print("running")
    some_work(4)
    some_work(2)
    some_work(1)

    print("call again")
    #input()
    some_work(4)
    print("call")












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































